steps:
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
   docker pull gcr.io/$PROJECT_ID/github.com/umpyre-code/rolodex:latest || true
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
   docker pull rustlang/rust:nightly || true
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'docker build --build-arg SSH_KEY="$$SSH_KEY" -t gcr.io/$PROJECT_ID/github.com/umpyre-code/rolodex:latest -t gcr.io/$PROJECT_ID/github.com/umpyre-code/rolodex:$REVISION_ID --cache-from gcr.io/$PROJECT_ID/github.com/umpyre-code/rolodex:latest --cache-from rustlang/rust:nightly .']
  secretEnv: ['SSH_KEY']
images: [
   'gcr.io/$PROJECT_ID/github.com/umpyre-code/rolodex:latest','gcr.io/$PROJECT_ID/github.com/umpyre-code/rolodex:$REVISION_ID',
]
secrets:
- kmsKeyName: projects/umpyre/locations/global/keyRings/deploy/cryptoKeys/deploy-key
  secretEnv:
    SSH_KEY: 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
