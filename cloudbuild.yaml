steps:
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
   docker pull gcr.io/$PROJECT_ID/github.com/umpyre-code/rolodex:latest || true
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
   docker pull rustlang/rust:nightly || true
- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args: ['-c', 'docker build --build-arg SSH_KEY="$$SSH_KEY" --squash -t gcr.io/$PROJECT_ID/github.com/umpyre-code/rolodex:latest -t gcr.io/$PROJECT_ID/github.com/umpyre-code/rolodex:$REVISION_ID --cache-from gcr.io/$PROJECT_ID/github.com/umpyre-code/rolodex:latest --cache-from rustlang/rust:nightly .']
  secretEnv: ['SSH_KEY']
images: [
   'gcr.io/$PROJECT_ID/github.com/umpyre-code/rolodex:latest','gcr.io/$PROJECT_ID/github.com/umpyre-code/rolodex:$REVISION_ID',
]
secrets:
- kmsKeyName: projects/umpyre/locations/global/keyRings/deploy/cryptoKeys/deploy-key
  secretEnv:
    SSH_KEY: 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
